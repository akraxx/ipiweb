package fr.flst.mmargr.model;

// default package
// Generated 10 mai 2014 19:36:35 by Hibernate Tools 3.4.0.CR1

import static javax.persistence.GenerationType.IDENTITY;

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;

import org.hibernate.validator.constraints.Length;

/**
 * User generated by hbm2java
 */
@Entity
@Table(name = "user", catalog = "java")
public class User implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 5566568763993943766L;
	private Integer id;
	private Adresse adresse;
	private String username;
	private String password;
	private String lastname;
	private String forname;
	private boolean admin = true;
	private boolean superadmin = false;
	private Set<Commande> commandes = new HashSet<Commande>(0);

	public User() {
	}

	public User(String username, String password, boolean admin, boolean superadmin) {
		this.username = username;
		this.password = password;
		this.admin = admin;
		this.superadmin = superadmin;
	}

	public User(Adresse adresse, String username, String password, String lastname, String forname, boolean admin, boolean superadmin, Set<Commande> commandes) {
		this.adresse = adresse;
		this.username = username;
		this.password = password;
		this.lastname = lastname;
		this.forname = forname;
		this.admin = admin;
		this.superadmin = superadmin;
		this.commandes = commandes;
	}
	
	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}
	
	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "id_adresse")
	public Adresse getAdresse() {
		return this.adresse;
	}

	public void setAdresse(Adresse adresse) {
		this.adresse = adresse;
	}
	
	@Column(name = "username", nullable = false, unique=true)
	@NotNull
	@Length(min = 6, max = 20, message = "la taille du nom d'utilisateur doit être entre {min} et {max} caractères")
	public String getUsername() {
		return this.username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	@Column(name = "password", nullable = false)
	@NotNull
	@Length(min = 6, max = 50, message = "la taille du mot de passe doit être entre {min} et {max} caractères")
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Column(name = "lastname")
	@NotNull
	@Length(min = 2, max = 20, message = "la taille du prénom doit être entre {min} et {max} caractères")
	public String getLastname() {
		return this.lastname;
	}

	public void setLastname(String lastname) {
		this.lastname = lastname;
	}

	@Column(name = "forname")
	@NotNull
	@Length(min = 2, max = 20, message = "la taille du nom doit être entre {min} et {max} caractères")
	public String getForname() {
		return this.forname;
	}

	public void setForname(String forname) {
		this.forname = forname;
	}

	@Column(name = "admin", nullable = false)
	public boolean isAdmin() {
		return this.admin;
	}

	public void setAdmin(boolean admin) {
		this.admin = admin;
	}

	@Column(name = "superadmin", nullable = false)
	public boolean isSuperadmin() {
		return this.superadmin;
	}

	public void setSuperadmin(boolean superadmin) {
		this.superadmin = superadmin;
	}
	
	@OneToMany(fetch = FetchType.EAGER, mappedBy = "user")
	public Set<Commande> getCommandes() {
		return this.commandes;
	}

	public void setCommandes(Set<Commande> commandes) {
		this.commandes = commandes;
	}
}
